#LINE quiet {#READ sys.config};

#ALIAS {mreload}
{
    #IF {"%1" == "" || "%1" == "all"}
    {
        #SHOWME \nReloading all modules...;
        #LINE quiet {#READ core_module.tin};

        #UNVAR autologin;
        #UNVAR login_name;
        #UNVAR login_password;

        #SHOWME Reload complete.\n;
    }
    {
        #CLASS {module_%1} {kill};
        #CLASS {module_%1} {open};
        #SHOWME \nReloading <069>%1<099>...;
        #READ modules/%1.tin;
        #CLASS {module_%1} {close};
        #SHOWME Reload complete.\n;
    };
};

#FUNCTION {is_out_of_date}
{
    #INFO system save;
    #LOCAL tt_version {$info[SYSTEM][CLIENT_VERSION]};
    #UNVAR info;
    #REPLACE {tt_version} {.} {};
    #REPLACE {tt_version} {b} {};
    #IF {$tt_version < 20192}
    {
        #RETURN 1;
    }
    {
        #RETURN 0;
    };
}

#EVENT {PROGRAM START}
{
    #IF {@is_out_of_date{}}
    {
        #SHOWME <001>Your version of Tintin++ is out of date.;
        #SHOWME <001>Please upgrade to v2.01.92 or later.;
    }
    {
        #SESSION legendmud mud.legendmud.org 9999;
    };
}

#EVENT {SESSION CONNECTED}
{
    #LINE quiet {#READ core_module.tin};
    #IF {"$autologin" == "true"}
    {
        #ACTION {{^Enter your choice or the name of your character:}}
        {
            #SEND $login_name;
            #SEND $login_password;

            #UNVAR autologin;
            #UNVAR login_name;
            #UNVAR login_password;

            #UNACTION {{^Enter your choice or the name of your character:}}
        }
        {5};
    }
    {
        #UNVAR autologin;
        #UNVAR login_name;
        #UNVAR login_password;
    };
}

#EVENT {SCREEN RESIZE}
{
    @create_layout{};
    #IF {@has_module{map}}
    {
        @on_map_resize{};
    };
    #IF {@has_module{chat}}
    {
        @on_chat_resize{};
    };
}

#EVENT {SESSION DISCONNECTED} {#INFO stack};

#FUNCTION {subscribe_event}
{
    #IF {"%1" != "" && "%2" != ""}
    {
        #VAR events[%1] hi;
    }
    {
        #SHOWME <001>Invalid call to subscribe_event. Must provide an event name, and an identifier.;
    }

    #RETURN #NOP;
};

#FUNCTION {raise_event}
{
    #RETURN #NOP;
};
